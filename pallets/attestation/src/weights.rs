
//! Autogenerated weights for `pallet_attestation`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 42.0.0
//! DATE: 2024-12-02, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `Zachary`, CPU: `11th Gen Intel(R) Core(TM) i7-11800H @ 2.30GHz`
//! WASM-EXECUTION: `Compiled`, CHAIN: `None`, DB CACHE: 1024

// Executed Command:
// ./target/release/sxt-node
// benchmark
// pallet
// --runtime=target/release/wbuild/sxt-runtime/sxt_runtime.wasm
// --genesis-builder=runtime
// --execution=wasm
// --wasm-execution=compiled
// --pallet
// pallet_attestation
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --output
// test.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

pub trait WeightInfo {
    fn register_attestation_key() -> Weight;
    fn attest_block() -> Weight;
    fn remove_attestation_key() -> Weight;
}


/// Weight functions for `pallet_attestation`.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: `Attestations::AttestationKeys` (r:1 w:1)
	/// Proof: `Attestations::AttestationKeys` (`max_values`: Some(1), `max_size`: Some(4226), added: 4721, mode: `MaxEncodedLen`)
	fn register_attestation_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `5711`
		// Minimum execution time: 576_197_000 picoseconds.
		Weight::from_parts(599_181_000, 0)
			.saturating_add(Weight::from_parts(0, 5711))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `Attestations::AttestationKeys` (r:1 w:0)
	/// Proof: `Attestations::AttestationKeys` (`max_values`: Some(1), `max_size`: Some(4226), added: 4721, mode: `MaxEncodedLen`)
	/// Storage: `Attestations::Attestations` (r:1 w:1)
	/// Proof: `Attestations::Attestations` (`max_values`: None, `max_size`: Some(8406), added: 10881, mode: `MaxEncodedLen`)
	fn attest_block() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `74`
		//  Estimated: `11871`
		// Minimum execution time: 575_157_000 picoseconds.
		Weight::from_parts(599_454_000, 0)
			.saturating_add(Weight::from_parts(0, 11871))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `Attestations::AttestationKeys` (r:1 w:1)
	/// Proof: `Attestations::AttestationKeys` (`max_values`: Some(1), `max_size`: Some(4226), added: 4721, mode: `MaxEncodedLen`)
	fn remove_attestation_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `74`
		//  Estimated: `5711`
		// Minimum execution time: 9_652_000 picoseconds.
		Weight::from_parts(11_207_000, 0)
			.saturating_add(Weight::from_parts(0, 5711))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
}


impl WeightInfo for () {
	/// Storage: `Attestations::AttestationKeys` (r:1 w:1)
	/// Proof: `Attestations::AttestationKeys` (`max_values`: Some(1), `max_size`: Some(4226), added: 4721, mode: `MaxEncodedLen`)
	fn register_attestation_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `5711`
		// Minimum execution time: 576_197_000 picoseconds.
		Weight::from_parts(0, 0)
	}
	/// Storage: `Attestations::AttestationKeys` (r:1 w:0)
	/// Proof: `Attestations::AttestationKeys` (`max_values`: Some(1), `max_size`: Some(4226), added: 4721, mode: `MaxEncodedLen`)
	/// Storage: `Attestations::Attestations` (r:1 w:1)
	/// Proof: `Attestations::Attestations` (`max_values`: None, `max_size`: Some(8406), added: 10881, mode: `MaxEncodedLen`)
	fn attest_block() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `74`
		//  Estimated: `11871`
		// Minimum execution time: 575_157_000 picoseconds.
		Weight::from_parts(0,0 )
	}
	/// Storage: `Attestations::AttestationKeys` (r:1 w:1)
	/// Proof: `Attestations::AttestationKeys` (`max_values`: Some(1), `max_size`: Some(4226), added: 4721, mode: `MaxEncodedLen`)
	fn remove_attestation_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `74`
		//  Estimated: `5711`
		// Minimum execution time: 9_652_000 picoseconds.
		Weight::from_parts(0,0 )
	}
}