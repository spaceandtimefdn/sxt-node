-- v1.4 changes:
-- Add `BALANCE_CACHE` tables for Bitcoin Wallets mode

CREATE TABLE IF NOT EXISTS BITCOIN.BLOCKS(
    BLOCK_NUMBER BIGINT NOT NULL,
    TIME_STAMP TIMESTAMP,
    BLOCK_HASH VARCHAR NOT NULL,
    VERSION INT,
    MERKLE_ROOT VARCHAR,
    NONCE BIGINT,
    BITS VARCHAR,
    DIFFICULTY DECIMAL(39,0),
    TX_COUNT BIGINT,
    PREVIOUS_BLOCK_HASH VARCHAR,
    STRIPPED_SIZE DECIMAL(20,0),
    SIZE_ DECIMAL(20,0),
    WEIGHT DECIMAL(20,0),
    TOTAL_FEES DECIMAL(20,0),
    SUBSIDY DECIMAL(20,0),
    MEDIAN_TIME TIMESTAMP,
    PRIMARY KEY(BLOCK_NUMBER)
);

CREATE TABLE IF NOT EXISTS BITCOIN.STATS(
    BLOCK_NUMBER BIGINT NOT NULL,
    TIME_STAMP TIMESTAMP,
    BLOCK_HASH VARCHAR NOT NULL,
    AVG_FEE DECIMAL(20,0),
    AVG_FEERATE DECIMAL(20,0),
    AVG_TX_SIZE BIGINT,
    INS DECIMAL(20,0),
    MAX_FEE DECIMAL(20,0),
    MAX_FEERATE DECIMAL(20,0),
    MAX_TX_SIZE BIGINT,
    MEDIAN_FEE DECIMAL(20,0),
    MEDIAN_TIME TIMESTAMP,
    MEDIAN_TX_SIZE BIGINT,
    MIN_FEE DECIMAL(20,0),
    MIN_FEERATE DECIMAL(20,0),
    MIN_TX_SIZE BIGINT,
    OUTS DECIMAL(20,0),
    SUBSIDY DECIMAL(20,0),
    SWTOTAL_SIZE DECIMAL(20,0),
    SWTOTAL_WEIGHT DECIMAL(20,0),
    SWTXS DECIMAL(20,0),
    TOTAL_OUT DECIMAL(20,0),
    TOTAL_SIZE DECIMAL(20,0),
    TOTAL_WEIGHT DECIMAL(20,0),
    TOTAL_FEE DECIMAL(20,0),
    TX_COUNT DECIMAL(20,0),
    UTXO_INCREASE INT,
    UTXO_SIZE_INC INT,
    PRIMARY KEY(BLOCK_NUMBER),
    FOREIGN KEY (BLOCK_NUMBER) REFERENCES BITCOIN.BLOCKS(BLOCK_NUMBER)
);

CREATE TABLE IF NOT EXISTS BITCOIN.TRANSACTIONS (
    BLOCK_NUMBER BIGINT NOT NULL,
    TIME_STAMP TIMESTAMP,
    TXID VARCHAR(64) NOT NULL,
    VERSION INT,
    SIZE_ DECIMAL(20,0),
    VSIZE DECIMAL(20,0),
    WEIGHT DECIMAL(20,0),
    INPUT_COUNT BIGINT,
    OUTPUTS_VALUE DECIMAL(20,0),
    OUTPUT_COUNT BIGINT,
    LOCKTIME BIGINT,
    IS_COINBASE BOOLEAN,
    RAW_HEX VARCHAR,
    PRIMARY KEY(BLOCK_NUMBER, TXID),
    FOREIGN KEY (BLOCK_NUMBER) REFERENCES BITCOIN.BLOCKS(BLOCK_NUMBER)
);

CREATE TABLE IF NOT EXISTS BITCOIN.TX_INPUTS(
    BLOCK_NUMBER BIGINT NOT NULL,
    TIME_STAMP TIMESTAMP,
    INPUT_ID VARCHAR,
    TXID VARCHAR,
    IS_COINBASE BOOLEAN,
    COINBASE VARCHAR,
    PREVIOUS_OUTPUT_TXID VARCHAR,
    PREVIOUS_OUTPUT_IDX BIGINT,
    SEQUENCE_ BIGINT,
    PRIMARY KEY (INPUT_ID, BLOCK_NUMBER),
    FOREIGN KEY (TXID, BLOCK_NUMBER) REFERENCES BITCOIN.TRANSACTIONS(TXID, BLOCK_NUMBER)
);

CREATE TABLE IF NOT EXISTS BITCOIN.INPUT_SCRIPTSIG(
    BLOCK_NUMBER BIGINT NOT NULL,
    TIME_STAMP TIMESTAMP,
    SCRIPTSIG_ID VARCHAR,
    INPUT_ID VARCHAR,
    ASM VARCHAR,
    SIG_HEX VARCHAR,
    PRIMARY KEY (SCRIPTSIG_ID, BLOCK_NUMBER),
    FOREIGN KEY (INPUT_ID) REFERENCES BITCOIN.TX_INPUTS(INPUT_ID)
);

CREATE TABLE IF NOT EXISTS BITCOIN.OUTPUT_SCRIPTPUBKEY(
    BLOCK_NUMBER BIGINT NOT NULL,
    TIME_STAMP TIMESTAMP,
    SCRIPTPUBKEY_ID VARCHAR,
    OUTPUT_ID VARCHAR,
    ASM VARCHAR,
    SIG_HEX VARCHAR,
    ADDRESS VARCHAR,
    PRIMARY KEY (SCRIPTPUBKEY_ID, BLOCK_NUMBER),
    FOREIGN KEY (OUTPUT_ID) REFERENCES BITCOIN.TX_OUTPUTS(OUTPUT_ID)
);

CREATE TABLE IF NOT EXISTS BITCOIN.TX_OUTPUTS(
    BLOCK_NUMBER BIGINT NOT NULL,
    TIME_STAMP TIMESTAMP,
    OUTPUT_ID VARCHAR,
    TXID VARCHAR,
    OUT_VALUE DECIMAL(20,0),
    WEIGHT DECIMAL(20,0),
    PRIMARY KEY (OUTPUT_ID, BLOCK_NUMBER),
    FOREIGN KEY (TXID, BLOCK_NUMBER) REFERENCES BITCOIN.TRANSACTIONS(TXID, BLOCK_NUMBER)
);

CREATE TABLE IF NOT EXISTS BITCOIN.WALLETS(
    BLOCK_NUMBER BIGINT NOT NULL,
    TIME_STAMP TIMESTAMP,
    TXID VARCHAR,
    ADDRESS VARCHAR,
    CHANGE_AMT DECIMAL(39,0),
    BALANCE DECIMAL(20,0),
    VALUE_USD DECIMAL(38, 18),
    PRIMARY KEY (TXID, BLOCK_NUMBER, ADDRESS),
    FOREIGN KEY (TXID, BLOCK_NUMBER) REFERENCES BITCOIN.TRANSACTIONS(TXID, BLOCK_NUMBER)
);

CREATE TABLE IF NOT EXISTS BITCOIN.BALANCE_CACHE_0(
    BLOCK_NUMBER BIGINT NOT NULL,
    TIME_STAMP TIMESTAMP,
    ADDRESS VARCHAR,
    BALANCE DECIMAL(20,0),
    PRIMARY KEY (ADDRESS)
);

CREATE TABLE IF NOT EXISTS BITCOIN.BALANCE_CACHE_1(
    BLOCK_NUMBER BIGINT NOT NULL,
    TIME_STAMP TIMESTAMP,
    ADDRESS VARCHAR,
    BALANCE DECIMAL(20,0),
    PRIMARY KEY (ADDRESS)
);

CREATE TABLE IF NOT EXISTS BITCOIN.BALANCE_CACHE_2(
    BLOCK_NUMBER BIGINT NOT NULL,
    TIME_STAMP TIMESTAMP,
    ADDRESS VARCHAR,
    BALANCE DECIMAL(20,0),
    PRIMARY KEY (ADDRESS)
);

CREATE TABLE IF NOT EXISTS BITCOIN.BALANCE_CACHE_3(
    BLOCK_NUMBER BIGINT NOT NULL,
    TIME_STAMP TIMESTAMP,
    ADDRESS VARCHAR,
    BALANCE DECIMAL(20,0),
    PRIMARY KEY (ADDRESS)
);

CREATE TABLE IF NOT EXISTS BITCOIN.BALANCE_CACHE_4(
    BLOCK_NUMBER BIGINT NOT NULL,
    TIME_STAMP TIMESTAMP,
    ADDRESS VARCHAR,
    BALANCE DECIMAL(20,0),
    PRIMARY KEY (ADDRESS)
);

CREATE TABLE IF NOT EXISTS BITCOIN.BALANCE_CACHE_5(
    BLOCK_NUMBER BIGINT NOT NULL,
    TIME_STAMP TIMESTAMP,
    ADDRESS VARCHAR,
    BALANCE DECIMAL(20,0),
    PRIMARY KEY (ADDRESS)
);

CREATE TABLE IF NOT EXISTS BITCOIN.BALANCE_CACHE_6(
    BLOCK_NUMBER BIGINT NOT NULL,
    TIME_STAMP TIMESTAMP,
    ADDRESS VARCHAR,
    BALANCE DECIMAL(20,0),
    PRIMARY KEY (ADDRESS)
);

CREATE TABLE IF NOT EXISTS BITCOIN.BALANCE_CACHE_7(
    BLOCK_NUMBER BIGINT NOT NULL,
    TIME_STAMP TIMESTAMP,
    ADDRESS VARCHAR,
    BALANCE DECIMAL(20,0),
    PRIMARY KEY (ADDRESS)
);

CREATE TABLE IF NOT EXISTS BITCOIN.BALANCE_CACHE_8(
    BLOCK_NUMBER BIGINT NOT NULL,
    TIME_STAMP TIMESTAMP,
    ADDRESS VARCHAR,
    BALANCE DECIMAL(20,0),
    PRIMARY KEY (ADDRESS)
);

CREATE TABLE IF NOT EXISTS BITCOIN.BALANCE_CACHE_9(
    BLOCK_NUMBER BIGINT NOT NULL,
    TIME_STAMP TIMESTAMP,
    ADDRESS VARCHAR,
    BALANCE DECIMAL(20,0),
    PRIMARY KEY (ADDRESS)
);
