{
    "abi": [
        {
            "type": "constructor",
            "inputs": [
                {
                    "name": "_root",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "verify",
            "inputs": [
                {
                    "name": "proof",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                },
                {
                    "name": "addr",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "amount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "verify",
            "inputs": [
                {
                    "name": "proof",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                },
                {
                    "name": "addr",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "verify",
            "inputs": [
                {
                    "name": "proof",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                },
                {
                    "name": "leaf",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "verifyAccountProof",
            "inputs": [
                {
                    "name": "rootArg",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "proof",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                },
                {
                    "name": "accountId",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "freeBalance",
                    "type": "uint128",
                    "internalType": "uint128"
                }
            ],
            "outputs": [],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "verifyCommitmentProof",
            "inputs": [
                {
                    "name": "rootArg",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "proof",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                },
                {
                    "name": "name",
                    "type": "bytes",
                    "internalType": "bytes"
                },
                {
                    "name": "namespace",
                    "type": "bytes",
                    "internalType": "bytes"
                },
                {
                    "name": "scheme",
                    "type": "bytes1",
                    "internalType": "bytes1"
                },
                {
                    "name": "commitment",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "verifyStateRootSignature",
            "inputs": [
                {
                    "name": "treeRoot",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "blockNumber",
                    "type": "uint32",
                    "internalType": "uint32"
                },
                {
                    "name": "v",
                    "type": "uint8",
                    "internalType": "uint8"
                },
                {
                    "name": "r",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "s",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "expectedAddress",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [],
            "stateMutability": "pure"
        },
        {
            "type": "function",
            "name": "verifyWithRoot",
            "inputs": [
                {
                    "name": "proof",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                },
                {
                    "name": "leaf",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "rootArg",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [],
            "stateMutability": "pure"
        }
    ],
    "bytecode": {
        "object": "0x6080604052348015600e575f5ffd5b50604051610a10380380610a10833981016040819052602b916031565b5f556047565b5f602082840312156040575f5ffd5b5051919050565b6109bc806100545f395ff3fe608060405234801561000f575f5ffd5b506004361061007a575f3560e01c80637b3e43be116100585780637b3e43be146100b957806396ccc330146100cc578063972a2a62146100df5780639b41e7ca146100f2575f5ffd5b806304b38ce01461007e578063659a1026146100935780636d0fbc7f146100a6575b5f5ffd5b61009161008c36600461059e565b610105565b005b6100916100a13660046105f1565b610172565b6100916100b436600461063c565b6101d8565b6100916100c73660046106af565b610267565b6100916100da36600461079e565b61038f565b6100916100ed36600461086f565b610405565b6100916101003660046108b1565b610431565b604080516001600160a01b03841660208201529081018290525f90606001604051602081830303815290604052805190602001209050610147845f5483610438565b61016c5760405162461bcd60e51b8152600401610163906108fb565b60405180910390fd5b50505050565b6040516bffffffffffffffffffffffff19606083901b1660208201525f906034016040516020818303038152906040528051906020012090506101b7835f5483610438565b6101d35760405162461bcd60e51b8152600401610163906108fb565b505050565b5f828260405160200161020b92919091825260801b6fffffffffffffffffffffffffffffffff1916602082015260300190565b60405160208183030381529060405290505f818051906020012090505f8160405160200161023b91815260200190565b60405160208183030381529060405280519060200120905061025e868289610431565b50505050505050565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3336000000006020820152603c81018790526001600160e01b031960e087901b16605c8201525f9060600160408051601f1981840301815282825280516020918201205f80855291840180845281905260ff89169284019290925260608301879052608083018690529092509060019060a0016020604051602081039080840390855afa158015610318573d5f5f3e3d5ffd5b505050602060405103519050826001600160a01b0316816001600160a01b0316146103855760405162461bcd60e51b815260206004820152601960248201527f496e76616c69642061646472657373207265636f7665726564000000000000006044820152606401610163565b5050505050505050565b5f848484846040516020016103a79493929190610939565b60405160208183030381529060405290505f818051906020012090505f816040516020016103d791815260200190565b6040516020818303038152906040528051906020012090506103fa88828b610431565b505050505050505050565b610411825f5483610438565b61042d5760405162461bcd60e51b8152600401610163906108fb565b5050565b6101b78382845b5f82610444858461044d565b14949350505050565b5f81815b84518110156104875761047d8286838151811061047057610470610972565b602002602001015161048f565b9150600101610451565b509392505050565b5f8183106104a9575f8281526020849052604090206104b7565b5f8381526020839052604090205b9392505050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff811182821017156104fb576104fb6104be565b604052919050565b5f82601f830112610512575f5ffd5b813567ffffffffffffffff81111561052c5761052c6104be565b8060051b61053c602082016104d2565b91825260208185018101929081019086841115610557575f5ffd5b6020860192505b8383101561057957823582526020928301929091019061055e565b9695505050505050565b80356001600160a01b0381168114610599575f5ffd5b919050565b5f5f5f606084860312156105b0575f5ffd5b833567ffffffffffffffff8111156105c6575f5ffd5b6105d286828701610503565b9350506105e160208501610583565b9150604084013590509250925092565b5f5f60408385031215610602575f5ffd5b823567ffffffffffffffff811115610618575f5ffd5b61062485828601610503565b92505061063360208401610583565b90509250929050565b5f5f5f5f6080858703121561064f575f5ffd5b84359350602085013567ffffffffffffffff81111561066c575f5ffd5b61067887828801610503565b9350506040850135915060608501356fffffffffffffffffffffffffffffffff811681146106a4575f5ffd5b939692955090935050565b5f5f5f5f5f5f60c087890312156106c4575f5ffd5b86359550602087013563ffffffff811681146106de575f5ffd5b9450604087013560ff811681146106f3575f5ffd5b9350606087013592506080870135915061070f60a08801610583565b90509295509295509295565b5f82601f83011261072a575f5ffd5b813567ffffffffffffffff811115610744576107446104be565b610757601f8201601f19166020016104d2565b81815284602083860101111561076b575f5ffd5b816020850160208301375f918101602001919091529392505050565b80356001600160f81b031981168114610599575f5ffd5b5f5f5f5f5f5f60c087890312156107b3575f5ffd5b86359550602087013567ffffffffffffffff8111156107d0575f5ffd5b6107dc89828a01610503565b955050604087013567ffffffffffffffff8111156107f8575f5ffd5b61080489828a0161071b565b945050606087013567ffffffffffffffff811115610820575f5ffd5b61082c89828a0161071b565b93505061083b60808801610787565b915060a087013567ffffffffffffffff811115610856575f5ffd5b61086289828a0161071b565b9150509295509295509295565b5f5f60408385031215610880575f5ffd5b823567ffffffffffffffff811115610896575f5ffd5b6108a285828601610503565b95602094909401359450505050565b5f5f5f606084860312156108c3575f5ffd5b833567ffffffffffffffff8111156108d9575f5ffd5b6108e586828701610503565b9660208601359650604090950135949350505050565b6020808252600d908201526c24b73b30b634b210383937b7b360991b604082015260600190565b5f81518060208401855e5f93019283525090919050565b5f61094d6109478388610922565b86610922565b6001600160f81b0319851681526109676001820185610922565b979650505050505050565b634e487b7160e01b5f52603260045260245ffdfea2646970667358221220b7e89efc21ba7be166b596d7f8b086e590380b276ce1ddd65e5d55c28c77444064736f6c634300081c0033",
        "sourceMap": "103:2757:24:-:0;;;154:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;191:4;:12;103:2757;;14:184:26;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;-1:-1:-1;176:16:26;;14:184;-1:-1:-1;14:184:26:o;:::-;103:2757:24;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "0x608060405234801561000f575f5ffd5b506004361061007a575f3560e01c80637b3e43be116100585780637b3e43be146100b957806396ccc330146100cc578063972a2a62146100df5780639b41e7ca146100f2575f5ffd5b806304b38ce01461007e578063659a1026146100935780636d0fbc7f146100a6575b5f5ffd5b61009161008c36600461059e565b610105565b005b6100916100a13660046105f1565b610172565b6100916100b436600461063c565b6101d8565b6100916100c73660046106af565b610267565b6100916100da36600461079e565b61038f565b6100916100ed36600461086f565b610405565b6100916101003660046108b1565b610431565b604080516001600160a01b03841660208201529081018290525f90606001604051602081830303815290604052805190602001209050610147845f5483610438565b61016c5760405162461bcd60e51b8152600401610163906108fb565b60405180910390fd5b50505050565b6040516bffffffffffffffffffffffff19606083901b1660208201525f906034016040516020818303038152906040528051906020012090506101b7835f5483610438565b6101d35760405162461bcd60e51b8152600401610163906108fb565b505050565b5f828260405160200161020b92919091825260801b6fffffffffffffffffffffffffffffffff1916602082015260300190565b60405160208183030381529060405290505f818051906020012090505f8160405160200161023b91815260200190565b60405160208183030381529060405280519060200120905061025e868289610431565b50505050505050565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3336000000006020820152603c81018790526001600160e01b031960e087901b16605c8201525f9060600160408051601f1981840301815282825280516020918201205f80855291840180845281905260ff89169284019290925260608301879052608083018690529092509060019060a0016020604051602081039080840390855afa158015610318573d5f5f3e3d5ffd5b505050602060405103519050826001600160a01b0316816001600160a01b0316146103855760405162461bcd60e51b815260206004820152601960248201527f496e76616c69642061646472657373207265636f7665726564000000000000006044820152606401610163565b5050505050505050565b5f848484846040516020016103a79493929190610939565b60405160208183030381529060405290505f818051906020012090505f816040516020016103d791815260200190565b6040516020818303038152906040528051906020012090506103fa88828b610431565b505050505050505050565b610411825f5483610438565b61042d5760405162461bcd60e51b8152600401610163906108fb565b5050565b6101b78382845b5f82610444858461044d565b14949350505050565b5f81815b84518110156104875761047d8286838151811061047057610470610972565b602002602001015161048f565b9150600101610451565b509392505050565b5f8183106104a9575f8281526020849052604090206104b7565b5f8381526020839052604090205b9392505050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff811182821017156104fb576104fb6104be565b604052919050565b5f82601f830112610512575f5ffd5b813567ffffffffffffffff81111561052c5761052c6104be565b8060051b61053c602082016104d2565b91825260208185018101929081019086841115610557575f5ffd5b6020860192505b8383101561057957823582526020928301929091019061055e565b9695505050505050565b80356001600160a01b0381168114610599575f5ffd5b919050565b5f5f5f606084860312156105b0575f5ffd5b833567ffffffffffffffff8111156105c6575f5ffd5b6105d286828701610503565b9350506105e160208501610583565b9150604084013590509250925092565b5f5f60408385031215610602575f5ffd5b823567ffffffffffffffff811115610618575f5ffd5b61062485828601610503565b92505061063360208401610583565b90509250929050565b5f5f5f5f6080858703121561064f575f5ffd5b84359350602085013567ffffffffffffffff81111561066c575f5ffd5b61067887828801610503565b9350506040850135915060608501356fffffffffffffffffffffffffffffffff811681146106a4575f5ffd5b939692955090935050565b5f5f5f5f5f5f60c087890312156106c4575f5ffd5b86359550602087013563ffffffff811681146106de575f5ffd5b9450604087013560ff811681146106f3575f5ffd5b9350606087013592506080870135915061070f60a08801610583565b90509295509295509295565b5f82601f83011261072a575f5ffd5b813567ffffffffffffffff811115610744576107446104be565b610757601f8201601f19166020016104d2565b81815284602083860101111561076b575f5ffd5b816020850160208301375f918101602001919091529392505050565b80356001600160f81b031981168114610599575f5ffd5b5f5f5f5f5f5f60c087890312156107b3575f5ffd5b86359550602087013567ffffffffffffffff8111156107d0575f5ffd5b6107dc89828a01610503565b955050604087013567ffffffffffffffff8111156107f8575f5ffd5b61080489828a0161071b565b945050606087013567ffffffffffffffff811115610820575f5ffd5b61082c89828a0161071b565b93505061083b60808801610787565b915060a087013567ffffffffffffffff811115610856575f5ffd5b61086289828a0161071b565b9150509295509295509295565b5f5f60408385031215610880575f5ffd5b823567ffffffffffffffff811115610896575f5ffd5b6108a285828601610503565b95602094909401359450505050565b5f5f5f606084860312156108c3575f5ffd5b833567ffffffffffffffff8111156108d9575f5ffd5b6108e586828701610503565b9660208601359650604090950135949350505050565b6020808252600d908201526c24b73b30b634b210383937b7b360991b604082015260600190565b5f81518060208401855e5f93019283525090919050565b5f61094d6109478388610922565b86610922565b6001600160f81b0319851681526109676001820185610922565b979650505050505050565b634e487b7160e01b5f52603260045260245ffdfea2646970667358221220b7e89efc21ba7be166b596d7f8b086e590380b276ce1ddd65e5d55c28c77444064736f6c634300081c0033",
        "sourceMap": "103:2757:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;216:252;;;;;;:::i;:::-;;:::i;:::-;;474:204;;;;;;:::i;:::-;;:::i;1050:516::-;;;;;;:::i;:::-;;:::i;2290:568::-;;;;;;:::i;:::-;;:::i;1608:676::-;;;;;;:::i;:::-;;:::i;684:146::-;;;;;;:::i;:::-;;:::i;836:174::-;;;;;;:::i;:::-;;:::i;216:252::-;363:24;;;-1:-1:-1;;;;;7140:32:26;;363:24:24;;;7122:51:26;7189:18;;;7182:34;;;338:12:24;;7095:18:26;;363:24:24;;;;;;;;;;;;353:35;;;;;;338:50;;406:37;425:5;432:4;;438;406:18;:37::i;:::-;398:63;;;;-1:-1:-1;;;398:63:24;;;;;;;:::i;:::-;;;;;;;;;328:140;216:252;;;:::o;474:204::-;575:22;;-1:-1:-1;;7718:2:26;7714:15;;;7710:53;575:22:24;;;7698:66:26;550:12:24;;7780::26;;575:22:24;;;;;;;;;;;;565:33;;;;;;550:48;;616:37;635:5;642:4;;648;616:18;:37::i;:::-;608:63;;;;-1:-1:-1;;;608:63:24;;;;;;;:::i;:::-;540:138;474:204;;:::o;1050:516::-;1285:20;1325:9;1336:11;1308:40;;;;;;;;7960:19:26;;;8017:3;8013:16;-1:-1:-1;;8009:62:26;8004:2;7995:12;;7988:84;8097:2;8088:12;;7803:303;1308:40:24;;;;;;;;;;;;;1285:63;;1358:23;1394:7;1384:18;;;;;;1358:44;;1412:17;1459:15;1442:33;;;;;;8240:19:26;;8284:2;8275:12;;8111:182;1442:33:24;;;;;;;;;;;;;1432:44;;;;;;1412:64;;1518:41;1533:5;1540:9;1551:7;1518:14;:41::i;:::-;1209:357;;;1050:516;;;;:::o;2290:568::-;2587:75;;8566:66:26;2587:75:24;;;8554:79:26;8649:12;;;8642:28;;;-1:-1:-1;;;;;;8726:3:26;8704:16;;;8700:43;8686:12;;;8679:65;2542:19:24;;8760:12:26;;2587:75:24;;;-1:-1:-1;;2587:75:24;;;;;;;;;2564:108;;2587:75;2564:108;;;;2723:17;2743:31;;;;;;;;;9010:25:26;;;9083:4;9071:17;;9051:18;;;9044:45;;;;9105:18;;;9098:34;;;9148:18;;;9141:34;;;2564:108:24;;-1:-1:-1;2723:17:24;2743:31;;8982:19:26;;2743:31:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2723:51;;2806:15;-1:-1:-1;;;;;2793:28:24;:9;-1:-1:-1;;;;;2793:28:24;;2785:66;;;;-1:-1:-1;;;2785:66:24;;9388:2:26;2785:66:24;;;9370:21:26;9427:2;9407:18;;;9400:30;9466:27;9446:18;;;9439:55;9511:18;;2785:66:24;9186:349:26;2785:66:24;2484:374;;2290:568;;;;;;:::o;1608:676::-;1885:24;1942:4;1960:9;1983:6;2003:10;1912:111;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1885:138;;2072:23;2108:11;2098:22;;;;;;2072:48;;2130:17;2177:15;2160:33;;;;;;8240:19:26;;8284:2;8275:12;;8111:182;2160:33:24;;;;;;;;;;;;;2150:44;;;;;;2130:64;;2236:41;2251:5;2258:9;2269:7;2236:14;:41::i;:::-;1829:455;;;1608:676;;;;;;:::o;684:146::-;768:37;787:5;794:4;;800;768:18;:37::i;:::-;760:63;;;;-1:-1:-1;;;760:63:24;;;;;;;:::i;:::-;684:146;;:::o;836:174::-;945:40;964:5;971:7;980:4;1156:154:23;1247:4;1299;1270:25;1283:5;1290:4;1270:12;:25::i;:::-;:33;;1156:154;-1:-1:-1;;;;1156:154:23:o;1934:290::-;2017:7;2059:4;2017:7;2073:116;2097:5;:12;2093:1;:16;2073:116;;;2145:33;2155:12;2169:5;2175:1;2169:8;;;;;;;;:::i;:::-;;;;;;;2145:9;:33::i;:::-;2130:48;-1:-1:-1;2111:3:23;;2073:116;;;-1:-1:-1;2205:12:23;1934:290;-1:-1:-1;;;1934:290:23:o;9205:147::-;9268:7;9298:1;9294;:5;:51;;9426:13;9517:15;;;9552:4;9545:15;;;9598:4;9582:21;;9294:51;;;9426:13;9517:15;;;9552:4;9545:15;;;9598:4;9582:21;;9302:20;9287:58;9205:147;-1:-1:-1;;;9205:147:23:o;14:127:26:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:275;217:2;211:9;282:2;263:13;;-1:-1:-1;;259:27:26;247:40;;317:18;302:34;;338:22;;;299:62;296:88;;;364:18;;:::i;:::-;400:2;393:22;146:275;;-1:-1:-1;146:275:26:o;426:775::-;480:5;533:3;526:4;518:6;514:17;510:27;500:55;;551:1;548;541:12;500:55;591:6;578:20;621:18;613:6;610:30;607:56;;;643:18;;:::i;:::-;689:6;686:1;682:14;716:30;740:4;736:2;732:13;716:30;:::i;:::-;782:19;;;826:4;858:15;;;854:26;;;817:14;;;;892:15;;;889:35;;;920:1;917;910:12;889:35;956:4;948:6;944:17;933:28;;970:200;986:6;981:3;978:15;970:200;;;1078:17;;1108:18;;1155:4;1003:14;;;;1146;;;;970:200;;;1188:7;426:775;-1:-1:-1;;;;;;426:775:26:o;1206:173::-;1274:20;;-1:-1:-1;;;;;1323:31:26;;1313:42;;1303:70;;1369:1;1366;1359:12;1303:70;1206:173;;;:::o;1384:490::-;1486:6;1494;1502;1555:2;1543:9;1534:7;1530:23;1526:32;1523:52;;;1571:1;1568;1561:12;1523:52;1611:9;1598:23;1644:18;1636:6;1633:30;1630:50;;;1676:1;1673;1666:12;1630:50;1699:61;1752:7;1743:6;1732:9;1728:22;1699:61;:::i;:::-;1689:71;;;1779:38;1813:2;1802:9;1798:18;1779:38;:::i;:::-;1769:48;;1864:2;1853:9;1849:18;1836:32;1826:42;;1384:490;;;;;:::o;1879:422::-;1972:6;1980;2033:2;2021:9;2012:7;2008:23;2004:32;2001:52;;;2049:1;2046;2039:12;2001:52;2089:9;2076:23;2122:18;2114:6;2111:30;2108:50;;;2154:1;2151;2144:12;2108:50;2177:61;2230:7;2221:6;2210:9;2206:22;2177:61;:::i;:::-;2167:71;;;2257:38;2291:2;2280:9;2276:18;2257:38;:::i;:::-;2247:48;;1879:422;;;;;:::o;2306:780::-;2417:6;2425;2433;2441;2494:3;2482:9;2473:7;2469:23;2465:33;2462:53;;;2511:1;2508;2501:12;2462:53;2556:23;;;-1:-1:-1;2654:2:26;2639:18;;2626:32;2681:18;2670:30;;2667:50;;;2713:1;2710;2703:12;2667:50;2736:61;2789:7;2780:6;2769:9;2765:22;2736:61;:::i;:::-;2726:71;-1:-1:-1;;2870:2:26;2855:18;;2842:32;;-1:-1:-1;2952:2:26;2937:18;;2924:32;3000:34;2987:48;;2975:61;;2965:89;;3050:1;3047;3040:12;2965:89;2306:780;;;;-1:-1:-1;2306:780:26;;-1:-1:-1;;2306:780:26:o;3091:880::-;3192:6;3200;3208;3216;3224;3232;3285:3;3273:9;3264:7;3260:23;3256:33;3253:53;;;3302:1;3299;3292:12;3253:53;3347:23;;;-1:-1:-1;3446:2:26;3431:18;;3418:32;3494:10;3481:24;;3469:37;;3459:65;;3520:1;3517;3510:12;3459:65;3543:7;-1:-1:-1;3602:2:26;3587:18;;3574:32;3650:4;3637:18;;3625:31;;3615:59;;3670:1;3667;3660:12;3615:59;3693:7;-1:-1:-1;3773:2:26;3758:18;;3745:32;;-1:-1:-1;3876:3:26;3861:19;;3848:33;;-1:-1:-1;3926:39:26;3960:3;3945:19;;3926:39;:::i;:::-;3916:49;;3091:880;;;;;;;;:::o;3976:558::-;4018:5;4071:3;4064:4;4056:6;4052:17;4048:27;4038:55;;4089:1;4086;4079:12;4038:55;4129:6;4116:20;4159:18;4151:6;4148:30;4145:56;;;4181:18;;:::i;:::-;4225:59;4272:2;4249:17;;-1:-1:-1;;4245:31:26;4278:4;4241:42;4225:59;:::i;:::-;4309:6;4300:7;4293:23;4363:3;4356:4;4347:6;4339;4335:19;4331:30;4328:39;4325:59;;;4380:1;4377;4370:12;4325:59;4445:6;4438:4;4430:6;4426:17;4419:4;4410:7;4406:18;4393:59;4501:1;4472:20;;;4494:4;4468:31;4461:42;;;;4476:7;3976:558;-1:-1:-1;;;3976:558:26:o;4539:166::-;4606:20;;-1:-1:-1;;;;;;4655:25:26;;4645:36;;4635:64;;4695:1;4692;4685:12;4710:1179;4865:6;4873;4881;4889;4897;4905;4958:3;4946:9;4937:7;4933:23;4929:33;4926:53;;;4975:1;4972;4965:12;4926:53;5020:23;;;-1:-1:-1;5118:2:26;5103:18;;5090:32;5145:18;5134:30;;5131:50;;;5177:1;5174;5167:12;5131:50;5200:61;5253:7;5244:6;5233:9;5229:22;5200:61;:::i;:::-;5190:71;;;5314:2;5303:9;5299:18;5286:32;5343:18;5333:8;5330:32;5327:52;;;5375:1;5372;5365:12;5327:52;5398:51;5441:7;5430:8;5419:9;5415:24;5398:51;:::i;:::-;5388:61;;;5502:2;5491:9;5487:18;5474:32;5531:18;5521:8;5518:32;5515:52;;;5563:1;5560;5553:12;5515:52;5586:51;5629:7;5618:8;5607:9;5603:24;5586:51;:::i;:::-;5576:61;;;5656:38;5689:3;5678:9;5674:19;5656:38;:::i;:::-;5646:48;;5747:3;5736:9;5732:19;5719:33;5777:18;5767:8;5764:32;5761:52;;;5809:1;5806;5799:12;5761:52;5832:51;5875:7;5864:8;5853:9;5849:24;5832:51;:::i;:::-;5822:61;;;4710:1179;;;;;;;;:::o;5894:462::-;5987:6;5995;6048:2;6036:9;6027:7;6023:23;6019:32;6016:52;;;6064:1;6061;6054:12;6016:52;6104:9;6091:23;6137:18;6129:6;6126:30;6123:50;;;6169:1;6166;6159:12;6123:50;6192:61;6245:7;6236:6;6225:9;6221:22;6192:61;:::i;:::-;6182:71;6322:2;6307:18;;;;6294:32;;-1:-1:-1;;;;5894:462:26:o;6361:582::-;6463:6;6471;6479;6532:2;6520:9;6511:7;6507:23;6503:32;6500:52;;;6548:1;6545;6538:12;6500:52;6588:9;6575:23;6621:18;6613:6;6610:30;6607:50;;;6653:1;6650;6643:12;6607:50;6676:61;6729:7;6720:6;6709:9;6705:22;6676:61;:::i;:::-;6666:71;6806:2;6791:18;;6778:32;;-1:-1:-1;6907:2:26;6892:18;;;6879:32;;6361:582;-1:-1:-1;;;;6361:582:26:o;7227:337::-;7429:2;7411:21;;;7468:2;7448:18;;;7441:30;-1:-1:-1;;;7502:2:26;7487:18;;7480:43;7555:2;7540:18;;7227:337::o;9540:211::-;9581:3;9619:5;9613:12;9663:6;9656:4;9649:5;9645:16;9640:3;9634:36;9725:1;9689:16;;9714:13;;;-1:-1:-1;9689:16:26;;9540:211;-1:-1:-1;9540:211:26:o;9756:444::-;10003:3;10034:55;10059:29;10084:3;10076:6;10059:29;:::i;:::-;10051:6;10034:55;:::i;:::-;-1:-1:-1;;;;;;10112:26:26;;10098:41;;10155:39;10191:1;10180:13;;10172:6;10155:39;:::i;:::-;10148:46;9756:444;-1:-1:-1;;;;;;;9756:444:26:o;10205:127::-;10266:10;10261:3;10257:20;10254:1;10247:31;10297:4;10294:1;10287:15;10321:4;10318:1;10311:15",
        "linkReferences": {}
    },
    "methodIdentifiers": {
        "verify(bytes32[],address)": "659a1026",
        "verify(bytes32[],address,uint256)": "04b38ce0",
        "verify(bytes32[],bytes32)": "972a2a62",
        "verifyAccountProof(bytes32,bytes32[],bytes32,uint128)": "6d0fbc7f",
        "verifyCommitmentProof(bytes32,bytes32[],bytes,bytes,bytes1,bytes)": "96ccc330",
        "verifyStateRootSignature(bytes32,uint32,uint8,bytes32,bytes32,address)": "7b3e43be",
        "verifyWithRoot(bytes32[],bytes32,bytes32)": "9b41e7ca"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_root\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"verify\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"verify\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32\",\"name\":\"leaf\",\"type\":\"bytes32\"}],\"name\":\"verify\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"rootArg\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32\",\"name\":\"accountId\",\"type\":\"bytes32\"},{\"internalType\":\"uint128\",\"name\":\"freeBalance\",\"type\":\"uint128\"}],\"name\":\"verifyAccountProof\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"rootArg\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"name\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"namespace\",\"type\":\"bytes\"},{\"internalType\":\"bytes1\",\"name\":\"scheme\",\"type\":\"bytes1\"},{\"internalType\":\"bytes\",\"name\":\"commitment\",\"type\":\"bytes\"}],\"name\":\"verifyCommitmentProof\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"treeRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"expectedAddress\",\"type\":\"address\"}],\"name\":\"verifyStateRootSignature\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32\",\"name\":\"leaf\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"rootArg\",\"type\":\"bytes32\"}],\"name\":\"verifyWithRoot\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"verifyAccountProof(bytes32,bytes32[],bytes32,uint128)\":{\"notice\":\"**Verify Account Proof**\"},\"verifyCommitmentProof(bytes32,bytes32[],bytes,bytes,bytes1,bytes)\":{\"notice\":\"**Verify Commitment Proof**\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Verification.sol\":\"Verifier\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04\",\"dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG\"]},\"src/Verification.sol\":{\"keccak256\":\"0x27f3bde2bf2b4285be48f4d3379e7e69c13e67152885f55410f78cda5c738b11\",\"urls\":[\"bzz-raw://1a14b4e420667baea0c6189dca7d0af07c705cb21bf739683df2b88a6985e794\",\"dweb:/ipfs/QmYUeit3qnmcSckv6BqMhjcmiC5U6naAiGTNBNR8C8EWiT\"]}},\"version\":1}",
    "metadata": {
        "compiler": {
            "version": "0.8.28+commit.7893614a"
        },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "_root",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "constructor"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32[]",
                            "name": "proof",
                            "type": "bytes32[]"
                        },
                        {
                            "internalType": "address",
                            "name": "addr",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "amount",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "verify"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32[]",
                            "name": "proof",
                            "type": "bytes32[]"
                        },
                        {
                            "internalType": "address",
                            "name": "addr",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "verify"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32[]",
                            "name": "proof",
                            "type": "bytes32[]"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "leaf",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "verify"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "rootArg",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "bytes32[]",
                            "name": "proof",
                            "type": "bytes32[]"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "accountId",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "uint128",
                            "name": "freeBalance",
                            "type": "uint128"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "verifyAccountProof"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "rootArg",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "bytes32[]",
                            "name": "proof",
                            "type": "bytes32[]"
                        },
                        {
                            "internalType": "bytes",
                            "name": "name",
                            "type": "bytes"
                        },
                        {
                            "internalType": "bytes",
                            "name": "namespace",
                            "type": "bytes"
                        },
                        {
                            "internalType": "bytes1",
                            "name": "scheme",
                            "type": "bytes1"
                        },
                        {
                            "internalType": "bytes",
                            "name": "commitment",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "verifyCommitmentProof"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "treeRoot",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "uint32",
                            "name": "blockNumber",
                            "type": "uint32"
                        },
                        {
                            "internalType": "uint8",
                            "name": "v",
                            "type": "uint8"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "r",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "s",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "address",
                            "name": "expectedAddress",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "pure",
                    "type": "function",
                    "name": "verifyStateRootSignature"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32[]",
                            "name": "proof",
                            "type": "bytes32[]"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "leaf",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "rootArg",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "pure",
                    "type": "function",
                    "name": "verifyWithRoot"
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {},
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {
                    "verifyAccountProof(bytes32,bytes32[],bytes32,uint128)": {
                        "notice": "**Verify Account Proof**"
                    },
                    "verifyCommitmentProof(bytes32,bytes32[],bytes,bytes,bytes1,bytes)": {
                        "notice": "**Verify Commitment Proof**"
                    }
                },
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
                "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
                "ds-test/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/lib/ds-test/src/",
                "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
                "forge-std/=lib/forge-std/src/",
                "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
                "openzeppelin-contracts/=lib/openzeppelin-contracts/",
                "openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/",
                "openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/",
                "solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/"
            ],
            "optimizer": {
                "enabled": true,
                "runs": 200
            },
            "metadata": {
                "bytecodeHash": "ipfs"
            },
            "compilationTarget": {
                "src/Verification.sol": "Verifier"
            },
            "evmVersion": "cancun",
            "libraries": {}
        },
        "sources": {
            "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol": {
                "keccak256": "0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac",
                "urls": [
                    "bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04",
                    "dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG"
                ],
                "license": "MIT"
            },
            "src/Verification.sol": {
                "keccak256": "0x27f3bde2bf2b4285be48f4d3379e7e69c13e67152885f55410f78cda5c738b11",
                "urls": [
                    "bzz-raw://1a14b4e420667baea0c6189dca7d0af07c705cb21bf739683df2b88a6985e794",
                    "dweb:/ipfs/QmYUeit3qnmcSckv6BqMhjcmiC5U6naAiGTNBNR8C8EWiT"
                ],
                "license": null
            }
        },
        "version": 1
    },
    "id": 24
}