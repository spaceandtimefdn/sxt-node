[package]
name = "proof-of-sql-commitment-map"
authors.workspace = true
edition.workspace = true
repository.workspace = true

[dependencies]
bincode = { workspace = true, features = ["serde", "alloc"], optional = true }
codec = { workspace = true, features = ["derive"], optional = true }
curve25519-dalek = { workspace = true }
frame-support = { workspace = true, optional = true }
frame-system = { workspace = true, optional = true }
itertools = { workspace = true }
proof-of-sql = { workspace = true }
scale-info = { workspace = true, features = ["derive"], optional = true }
serde = { workspace = true }
snafu = { workspace = true }
sp-core = { workspace = true, features = ["serde"], optional = true }
sp-runtime-interface = { workspace = true, default-features = false, optional = true }
sxt-core = { workspace = true, optional = true }

[features]
memory-commitment-map = ["std"]
substrate = ["dep:frame-support", "dep:frame-system", "dep:codec", "dep:scale-info", "dep:sp-core", "dep:sxt-core", "dep:bincode", "dep:sp-runtime-interface"]
std = []
try-runtime = []

[dev-dependencies]
rand_chacha.workspace = true
proof-of-sql = { workspace = true, features = ["test"] }
rand.workspace = true
on-chain-table = { workspace = true }
sxt-core = { workspace = true, features = ["std"] }
sqlparser = { workspace = true }

[lints]
workspace = true

[[example]]
name = "pallet"
required-features = ["substrate", "std"]
crate-type = ["staticlib"]
